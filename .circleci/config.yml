version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.2
  gh: circleci/github-cli@2.7.0

main_branch_only: &main_branch_only
  filters:
    branches:
      only: main

jobs:
  run-gradle:
    parameters:
      gradle_command:
        type: string
        default: ""
    docker:
      - image: cimg/openjdk:21.0
    environment:
      _JAVA_OPTIONS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - checkout
      - run:
          name: Run Gradle Command
          command: |
            chmod +x ./gradlew
            ./gradlew << parameters.gradle_command >>

  update-version:
    machine:
      image: ubuntu-2404:2024.05.1
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: arn:aws:iam::251520706888:role/CircleCI
          region: eu-west-1
      - run:
          name: Upload version.json to S3
          command: |
            aws s3 cp version.json s3://modding/dwm/version.json

  create_draft_release:
    machine:
      image: ubuntu-2404:2024.05.1
    steps:
      - checkout
      - run:
          name: Get Current Build Name
          command: |
            export BUILD_NAME=$(date +%Y-%m-%d)/${CIRCLE_BUILD_NUM}
            echo "BUILD_NAME=${BUILD_NAME}" >> $BASH_ENV
            export VERSION=$(./gradlew properties -q | grep "^mod_version:" | cut -d' ' -f2)
            echo "VERSION=${VERSION}" >> $BASH_ENV
      - run:
          name: Build JAR
          command: |
            ./gradlew build
      - gh/setup:
          token: GITHUB_TOKEN
      - run:
          name: Create GitHub Release
          command: |
            gh auth login --with-token \<<< $GITHUB_TOKEN
            gh release create "${BUILD_NAME}" \
              --title "Draft Release ${BUILD_NAME}" \
              --notes "Draft Release ${BUILD_NAME}" \
              --draft \
              --prerelease
      - run:
          name: Upload JAR to GitHub Release
          command: |
            gh release upload "${BUILD_NAME}" build/libs/dwm-${VERSION}.jar --clobber
            gh release upload "${BUILD_NAME}" build/libs/dwm-${VERSION}-sources.jar --clobber


workflows:
  build-and-test:
    jobs:
      - run-gradle:
          name: Build
          gradle_command: "build"
      - run-gradle:
          name: Test
          gradle_command: "test"
      - update-version:
          <<: *main_branch_only
          requires: 
            - Test
      - create_draft_release:
          <<: *main_branch_only
          context:
            - GITHUB_CLI
          requires:
            - Test
