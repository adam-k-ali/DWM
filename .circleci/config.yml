version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.2
  github-cli: circleci/github-cli@2.7.0

jobs:
  run-gradle:
    parameters:
      gradle_command:
        type: string
        default: ""
    docker:
      - image: cimg/openjdk:21.0
    environment:
      _JAVA_OPTIONS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - checkout
      - run:
          name: Run Gradle Command
          command: |
            chmod +x ./gradlew
            ./gradlew << parameters.gradle_command >>

  update-version:
    machine:
      image: ubuntu-2404:2024.05.1
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: arn:aws:iam::251520706888:role/CircleCI
          region: eu-west-1
      - run:
          name: Upload version.json to S3
          command: |
            aws s3 cp version.json s3://modding/dwm/version.json

  create_release:
    machine:
      image: ubuntu-2404:2024.05.1
    steps:
      - checkout
      - run:
          name: Get Current Build Name
          command: |
            chmod +x ./gradlew
            export BUILD_NAME=$(date +%Y-%m-%d)/${CIRCLE_BUILD_NUM}
            echo "BUILD_NAME=${BUILD_NAME}" >> $BASH_ENV
            export VERSION=$(./gradlew properties -q | grep "^mod_version:" | cut -d' ' -f2)
            echo "VERSION=${VERSION}" >> $BASH_ENV
      - run:
          name: Build JAR
          command: |
            chmod +x ./gradlew
            ./gradlew build
      - github-cli/release:
          tag_name: "${BUILD_NAME}"
          release_name: "Release ${BUILD_NAME}"
          body: "Release notes for version << pipeline.git.tag >>"
          draft: false
          prerelease: false
      - run:
          name: Upload JAR to GitHub Release
          command: |
            gh release upload "v<< pipeline.git.tag >>" build/libs/dwm-${VERSION}.jar --clobber
            gh release upload "v<< pipeline.git.tag >>" build/libs/dwm-${VERSION}-sources.jar --clobber


workflows:
  build-and-test:
    jobs:
      - run-gradle:
          name: Build
          gradle_command: "build"
      - run-gradle:
          name: Test
          gradle_command: "test"

  build-and-publish:
    filters:
      branches:
        only:
          - main
    jobs:
      - update-version
      - create_release
